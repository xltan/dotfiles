set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'xltan/tmux-fzf-url'
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'laktak/extrakto'
bind-key "f" run-shell -b "$HOME/.tmux/plugins/tmux-fzf/scripts/window.sh switch"

set -g @continuum-boot-options 'kitty --start-as=minimized'
set -g @continuum-boot 'off'
set -g @continuum-restore 'on'

set -g @fzf-url-bind 'i'
set -g @fzf-url-history-limit '500'
set -g @fzf-url-fzf-options '-w 40% -h 35% --multi -0 -1 --no-preview --no-border'
set -g @open-S 'https://www.google.com/search?q='
set -g @resurrect-processes 'v'
set -g @resurrect-strategy-nvim 'session'
# set -g @resurrect-capture-pane-contents 'on'

# set -g @plugin 'christoomey/vim-tmux-navigator'

# for vim
# set -g @resurrect-strategy-vim 'session'
# # for neovim
if-shell '[ -n $SSH_TTY ]' 'unbind-key C-b; set -g prefix C-g; bind-key C-g send-prefix'

set -g @copy_mode_put 'Enter'

set -g word-separators ",â”‚`|:\"' ()[]{}<>\t"
set -g mode-keys vi
set -g mouse on

bind-key s choose-tree -sZ -O index
bind-key C-m set -g mouse 
unbind-key -T copy-mode-vi v
bind-key -T copy-mode-vi i switch-client -T text-object
bind-key -T text-object w if -F '#{selection_present}' { send -X select-word }
bind-key -T copy-mode-vi v if -F '#{selection_present}' { send -X clear-selection } { send -X begin-selection }
bind-key -T copy-mode-vi 'C-v' send -X rectangle-toggle  # Begin selection in copy mode.
bind-key -T copy-mode-vi Y send -X begin-selection \; send-key $ \; send-key h \; send-key y
bind-key -T copy-mode-vi 'C-c' send-key y

bind-key / copy-mode \; send-key ?
# bind-key -T copy-mode-vi C-g send-keys -X page-up
bind-key -n C-S-Left swap-window -t -1\; select-window -t -1
bind-key -n C-S-Right swap-window -t +1\; select-window -t +1

bind-key 'C-u' copy-mode \; send -X search-backward '((https?://|git@|git://|ssh://|ftp://|file:///)[[:alnum:]?=%/_.:,;~@!#$&()*+-]*|[[:<:]][[:digit:]]{1,3}\.[[:digit:]]{1,3}\.[[:digit:]]{1,3}\.[[:digit:]]{1,3}[[:>:]])'
bind-key 'C-d' copy-mode \; send -X search-backward '[[:<:]]([0-9a-f]{6,40}|[[:alnum:]]{52}|[0-9a-f]{64})[[:>:]]'
bind-key 'C-f' copy-mode \; send -X search-backward '(^|^\.|[[:space:]]|[[:space:]]\.|[[:space:]]\.\.|^\.\.)[[:alnum:]~_-]*/[][[:alnum:]_.#$%&+=/@-]*'

# Fix titlebar
set -g set-titles on
set -g set-titles-string "#T"

# Add truecolor support
set -sa terminal-features ',xterm-256color:RGB'
set -sa escape-time 50

bind-key '"' split-window -c '#{pane_current_path}'
bind-key % split-window -h -c '#{pane_current_path}'
bind-key c new-window -c '#{pane_current_path}'
bind-key "'" command-prompt -1 -p "pane index:"  "select-pane -t '%%'"

bind-key h select-pane -L
bind-key l select-pane -R
bind-key k select-pane -U
bind-key j select-pane -D
bind-key m last-window

bind-key u select-pane -t.0 \; resize-pane -Z
bind-key _ select-layout main-horizontal \; swap-pane -t.0 \; select-pane -t.0
bind-key | select-layout main-vertical \; swap-pane -t.0 \; select-pane -t.0
bind-key O run "tmux list-panes | grep -v active | sed 's/:.*//' | tail -r | xargs -n1 tmux kill-pane -t"
bind-key x kill-pane

bind-key C-l send-keys 'C-l'
bind-key C-g send-keys 'C-g'
bind-key 'C-\' send-keys 'C-\'
bind-key -r C-h send-keys 'C-h'

### tmux-vim begin
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vi?m?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
### tmux-vim end

# bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel

# set-option -g default-command "${SHELL}"
# set-option -g default-command "reattach-to-user-namespace ${SHELL}"

# default statusbar colors
set-option -g status-style "fg=default,bg=default"

# default window title colors
set-window-option -g window-status-style "fg=default,bg=default"
# active window title colors
set-window-option -g window-status-current-style "fg=blue,bg=default"
# pane border
set-option -g pane-border-style "fg=blue"
set-option -g pane-active-border-style "fg=blue"
# message text
set-option -g message-style "fg=default,bg=default"
# pane number display
set-option -g display-panes-active-colour "green"
set-option -g display-panes-colour "yellow"
# clock
set-window-option -g clock-mode-colour "green"
# copy mode highlight
set-window-option -g mode-style "fg=white,bg=black"
# bell
set-window-option -g window-status-bell-style "fg=black,bg=red"

set -g set-clipboard on
set -g status-interval 5
set -g automatic-rename on
set -g automatic-rename-format '#{b:pane_current_path}'
set -g renumber-windows on
set -g main-pane-width 30%
set -g main-pane-height 80%
set -g pane-border-style "fg=#373b41"
set -g pane-active-border-style "fg=#373b41"
set -g status-left ""
set -g status-right ""

set -s focus-events on
last_id="~/.tmux/.last_id"
set-hook -g pane-focus-out "run \"tmux display-message -p '%#{pane_id}' >> ${last_id}; \
  uniq ${last_id} | tail -10 > ~/.tmux/.tmp_id; mv ~/.tmux/.tmp_id ${last_id}\""
# set-hook -g pane-focus-out "run \"tmux display-message -p 'out'\""
# set-hook -g pane-exited "run \"sed '$d' ${last_id} > ~/.tmux/.tmp_id && mv ~/.tmux/.tmp_id ${last_id}\""
bind-key -n 'C-\' run "tmux switch-client -t $(tail -1 ${last_id})"

run '~/.tmux/plugins/tpm/tpm'
